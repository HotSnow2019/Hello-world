<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
 	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
  	http://www.springframework.org/schema/context 
  	http://www.springframework.org/schema/context/spring-context-3.0.xsd
  	http://www.springframework.org/schema/tx 
  	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
	http://www.springframework.org/schema/aop 
  	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 使用spring注解 -->
	<context:annotation-config></context:annotation-config>
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.spring.biz"></context:component-scan>
	<!-- <context:component-scan base-package="com.spring.dao"></context:component-scan> -->
	
	<!--定义数据源dataSource-->
	<bean id="dataSource" 
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" 
		p:driverClassName="oracle.jdbc.OracleDriver"
		p:url="jdbc:oracle:thin:@localhost:1521:xe" 
		p:username="ldl" 
		p:password="ldl" />
	
	<!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!--
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        -->
        <property name="typeAliasesPackage">
        	<value>com.spring.entity</value>
        </property>
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:com/spring/mapper/*.xml"></property>  
    </bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.spring.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!--定义事务管理器-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />
	
    <!-- 事务管理1：采用@Transactional注解方式使用事务 -->  
    <!-- <tx:annotation-driven transaction-manager="txManager"/> --> 

	<!-- 事务管理2：使用xml管理事务 -->
	<!-- 定义事务管理器管理所有的方法-->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="del*" propagation="REQUIRED"/>
			<tx:method name="*" propagation="SUPPORTS" read-only="true"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 定义AOP配置提供事务增强，让service包下的所有的Bean的所有方法拥有事务 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod" 
			expression="execution(* com.spring.biz..*(..))" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"  />
	</aop:config>
	
</beans>